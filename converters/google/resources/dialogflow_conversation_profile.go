// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package google

import "reflect"

const DialogflowConversationProfileAssetType string = "dialogflow.googleapis.com/ConversationProfile"

func resourceConverterDialogflowConversationProfile() ResourceConverter {
	return ResourceConverter{
		AssetType: DialogflowConversationProfileAssetType,
		Convert:   GetDialogflowConversationProfileCaiObject,
	}
}

func GetDialogflowConversationProfileCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	name, err := assetName(d, config, "//dialogflow.googleapis.com/{{name}}")
	if err != nil {
		return []Asset{}, err
	}
	if obj, err := GetDialogflowConversationProfileApiObject(d, config); err == nil {
		return []Asset{{
			Name: name,
			Type: DialogflowConversationProfileAssetType,
			Resource: &AssetResource{
				Version:              "v2",
				DiscoveryDocumentURI: "https://www.googleapis.com/discovery/v1/apis/dialogflow/v2/rest",
				DiscoveryName:        "ConversationProfile",
				Data:                 obj,
			},
		}}, nil
	} else {
		return []Asset{}, err
	}
}

func GetDialogflowConversationProfileApiObject(d TerraformResourceData, config *Config) (map[string]interface{}, error) {
	obj := make(map[string]interface{})
	displayNameProp, err := expandDialogflowConversationProfileDisplayName(d.Get("display_name"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("display_name"); !isEmptyValue(reflect.ValueOf(displayNameProp)) && (ok || !reflect.DeepEqual(v, displayNameProp)) {
		obj["displayName"] = displayNameProp
	}
	automatedAgentConfigProp, err := expandDialogflowConversationProfileAutomatedAgentConfig(d.Get("automated_agent_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("automated_agent_config"); !isEmptyValue(reflect.ValueOf(automatedAgentConfigProp)) && (ok || !reflect.DeepEqual(v, automatedAgentConfigProp)) {
		obj["automatedAgentConfig"] = automatedAgentConfigProp
	}
	humanAgentAssistantConfigProp, err := expandDialogflowConversationProfileHumanAgentAssistantConfig(d.Get("human_agent_assistant_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("human_agent_assistant_config"); !isEmptyValue(reflect.ValueOf(humanAgentAssistantConfigProp)) && (ok || !reflect.DeepEqual(v, humanAgentAssistantConfigProp)) {
		obj["humanAgentAssistantConfig"] = humanAgentAssistantConfigProp
	}
	humanAgentHandoffConfigProp, err := expandDialogflowConversationProfileHumanAgentHandoffConfig(d.Get("human_agent_handoff_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("human_agent_handoff_config"); !isEmptyValue(reflect.ValueOf(humanAgentHandoffConfigProp)) && (ok || !reflect.DeepEqual(v, humanAgentHandoffConfigProp)) {
		obj["humanAgentHandoffConfig"] = humanAgentHandoffConfigProp
	}
	notificationConfigProp, err := expandDialogflowConversationProfileNotificationConfig(d.Get("notification_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("notification_config"); !isEmptyValue(reflect.ValueOf(notificationConfigProp)) && (ok || !reflect.DeepEqual(v, notificationConfigProp)) {
		obj["notificationConfig"] = notificationConfigProp
	}
	loggingConfigProp, err := expandDialogflowConversationProfileLoggingConfig(d.Get("logging_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("logging_config"); !isEmptyValue(reflect.ValueOf(loggingConfigProp)) && (ok || !reflect.DeepEqual(v, loggingConfigProp)) {
		obj["loggingConfig"] = loggingConfigProp
	}
	newMessageEventNotificationConfigProp, err := expandDialogflowConversationProfileNewMessageEventNotificationConfig(d.Get("new_message_event_notification_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("new_message_event_notification_config"); !isEmptyValue(reflect.ValueOf(newMessageEventNotificationConfigProp)) && (ok || !reflect.DeepEqual(v, newMessageEventNotificationConfigProp)) {
		obj["newMessageEventNotificationConfig"] = newMessageEventNotificationConfigProp
	}
	sttConfigProp, err := expandDialogflowConversationProfileSttConfig(d.Get("stt_config"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("stt_config"); !isEmptyValue(reflect.ValueOf(sttConfigProp)) && (ok || !reflect.DeepEqual(v, sttConfigProp)) {
		obj["sttConfig"] = sttConfigProp
	}
	languageCodeProp, err := expandDialogflowConversationProfileLanguageCode(d.Get("language_code"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("language_code"); !isEmptyValue(reflect.ValueOf(languageCodeProp)) && (ok || !reflect.DeepEqual(v, languageCodeProp)) {
		obj["languageCode"] = languageCodeProp
	}
	timeZoneProp, err := expandDialogflowConversationProfileTimeZone(d.Get("time_zone"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("time_zone"); !isEmptyValue(reflect.ValueOf(timeZoneProp)) && (ok || !reflect.DeepEqual(v, timeZoneProp)) {
		obj["timeZone"] = timeZoneProp
	}
	securitySettingsProp, err := expandDialogflowConversationProfileSecuritySettings(d.Get("security_settings"), d, config)
	if err != nil {
		return nil, err
	} else if v, ok := d.GetOkExists("security_settings"); !isEmptyValue(reflect.ValueOf(securitySettingsProp)) && (ok || !reflect.DeepEqual(v, securitySettingsProp)) {
		obj["securitySettings"] = securitySettingsProp
	}

	return obj, nil
}

func expandDialogflowConversationProfileDisplayName(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileAutomatedAgentConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedAgent, err := expandDialogflowConversationProfileAutomatedAgentConfigAgent(original["agent"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedAgent); val.IsValid() && !isEmptyValue(val) {
		transformed["agent"] = transformedAgent
	}

	return transformed, nil
}

func expandDialogflowConversationProfileAutomatedAgentConfigAgent(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedNotificationConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfig(original["notification_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedNotificationConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["notificationConfig"] = transformedNotificationConfig
	}

	transformedHumanAgentSuggestionConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfig(original["human_agent_suggestion_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedHumanAgentSuggestionConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["humanAgentSuggestionConfig"] = transformedHumanAgentSuggestionConfig
	}

	transformedEndUserSuggestionConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig(original["end_user_suggestion_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedEndUserSuggestionConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["endUserSuggestionConfig"] = transformedEndUserSuggestionConfig
	}

	transformedMessageAnalysisConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfig(original["message_analysis_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMessageAnalysisConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["messageAnalysisConfig"] = transformedMessageAnalysisConfig
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedTopic, err := expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfigTopic(original["topic"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedTopic); val.IsValid() && !isEmptyValue(val) {
		transformed["topic"] = transformedTopic
	}

	transformedMessageFormat, err := expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfigMessageFormat(original["message_format"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMessageFormat); val.IsValid() && !isEmptyValue(val) {
		transformed["messageFormat"] = transformedMessageFormat
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfigTopic(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigNotificationConfigMessageFormat(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedFeatureConfigs, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigs(original["feature_configs"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedFeatureConfigs); val.IsValid() && !isEmptyValue(val) {
		transformed["featureConfigs"] = transformedFeatureConfigs
	}

	transformedGroupSuggestionResponses, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigGroupSuggestionResponses(original["group_suggestion_responses"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedGroupSuggestionResponses); val.IsValid() && !isEmptyValue(val) {
		transformed["groupSuggestionResponses"] = transformedGroupSuggestionResponses
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigs(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	req := make([]interface{}, 0, len(l))
	for _, raw := range l {
		if raw == nil {
			continue
		}
		original := raw.(map[string]interface{})
		transformed := make(map[string]interface{})

		transformedSuggestionFeature, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionFeature(original["suggestion_feature"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedSuggestionFeature); val.IsValid() && !isEmptyValue(val) {
			transformed["suggestionFeature"] = transformedSuggestionFeature
		}

		transformedEnableEventBasedSuggestion, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsEnableEventBasedSuggestion(original["enable_event_based_suggestion"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedEnableEventBasedSuggestion); val.IsValid() && !isEmptyValue(val) {
			transformed["enableEventBasedSuggestion"] = transformedEnableEventBasedSuggestion
		}

		transformedSuggestionTriggerSettings, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettings(original["suggestion_trigger_settings"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedSuggestionTriggerSettings); val.IsValid() && !isEmptyValue(val) {
			transformed["suggestionTriggerSettings"] = transformedSuggestionTriggerSettings
		}

		transformedQueryConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfig(original["query_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedQueryConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["queryConfig"] = transformedQueryConfig
		}

		transformedConversationModelConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationModelConfig(original["conversation_model_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedConversationModelConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["conversationModelConfig"] = transformedConversationModelConfig
		}

		transformedConversationProcessConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationProcessConfig(original["conversation_process_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedConversationProcessConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["conversationProcessConfig"] = transformedConversationProcessConfig
		}

		req = append(req, transformed)
	}
	return req, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionFeature(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedType, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionFeatureType(original["type"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedType); val.IsValid() && !isEmptyValue(val) {
		transformed["type"] = transformedType
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionFeatureType(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsEnableEventBasedSuggestion(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettings(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedNoSmalltalk, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettingsNoSmalltalk(original["no_smalltalk"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedNoSmalltalk); val.IsValid() && !isEmptyValue(val) {
		transformed["noSmalltalk"] = transformedNoSmalltalk
	}

	transformedOnlyEndUser, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettingsOnlyEndUser(original["only_end_user"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedOnlyEndUser); val.IsValid() && !isEmptyValue(val) {
		transformed["onlyEndUser"] = transformedOnlyEndUser
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettingsNoSmalltalk(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsSuggestionTriggerSettingsOnlyEndUser(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedMaxResults, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigMaxResults(original["max_results"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMaxResults); val.IsValid() && !isEmptyValue(val) {
		transformed["maxResults"] = transformedMaxResults
	}

	transformedConfidenceThreshold, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigConfidenceThreshold(original["confidence_threshold"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedConfidenceThreshold); val.IsValid() && !isEmptyValue(val) {
		transformed["confidenceThreshold"] = transformedConfidenceThreshold
	}

	transformedContextFilterSettings, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettings(original["context_filter_settings"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedContextFilterSettings); val.IsValid() && !isEmptyValue(val) {
		transformed["contextFilterSettings"] = transformedContextFilterSettings
	}

	transformedKnowledgeBaseQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySource(original["knowledge_base_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedKnowledgeBaseQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["knowledgeBaseQuerySource"] = transformedKnowledgeBaseQuerySource
	}

	transformedDocumentQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySource(original["document_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDocumentQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["documentQuerySource"] = transformedDocumentQuerySource
	}

	transformedDialogflowQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySource(original["dialogflow_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDialogflowQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["dialogflowQuerySource"] = transformedDialogflowQuerySource
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigMaxResults(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigConfidenceThreshold(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettings(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedDropHandoffMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropHandoffMessages(original["drop_handoff_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropHandoffMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropHandoffMessages"] = transformedDropHandoffMessages
	}

	transformedDropVirtualAgentMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropVirtualAgentMessages(original["drop_virtual_agent_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropVirtualAgentMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropVirtualAgentMessages"] = transformedDropVirtualAgentMessages
	}

	transformedDropIvrMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropIvrMessages(original["drop_ivr_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropIvrMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropIvrMessages"] = transformedDropIvrMessages
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropHandoffMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropVirtualAgentMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropIvrMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedKnowledgeBases, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySourceKnowledgeBases(original["knowledge_bases"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedKnowledgeBases); val.IsValid() && !isEmptyValue(val) {
		transformed["knowledgeBases"] = transformedKnowledgeBases
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySourceKnowledgeBases(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedDocuments, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySourceDocuments(original["documents"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDocuments); val.IsValid() && !isEmptyValue(val) {
		transformed["documents"] = transformedDocuments
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySourceDocuments(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedAgent, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySourceAgent(original["agent"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedAgent); val.IsValid() && !isEmptyValue(val) {
		transformed["agent"] = transformedAgent
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySourceAgent(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationModelConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedModel, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationModelConfigModel(original["model"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedModel); val.IsValid() && !isEmptyValue(val) {
		transformed["model"] = transformedModel
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationModelConfigModel(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationProcessConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedRecentSentencesCount, err := expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationProcessConfigRecentSentencesCount(original["recent_sentences_count"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedRecentSentencesCount); val.IsValid() && !isEmptyValue(val) {
		transformed["recentSentencesCount"] = transformedRecentSentencesCount
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigsConversationProcessConfigRecentSentencesCount(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigGroupSuggestionResponses(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedFeatureConfigs, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigs(original["feature_configs"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedFeatureConfigs); val.IsValid() && !isEmptyValue(val) {
		transformed["featureConfigs"] = transformedFeatureConfigs
	}

	transformedGroupSuggestionResponses, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigGroupSuggestionResponses(original["group_suggestion_responses"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedGroupSuggestionResponses); val.IsValid() && !isEmptyValue(val) {
		transformed["groupSuggestionResponses"] = transformedGroupSuggestionResponses
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigs(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	req := make([]interface{}, 0, len(l))
	for _, raw := range l {
		if raw == nil {
			continue
		}
		original := raw.(map[string]interface{})
		transformed := make(map[string]interface{})

		transformedSuggestionFeature, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionFeature(original["suggestion_feature"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedSuggestionFeature); val.IsValid() && !isEmptyValue(val) {
			transformed["suggestionFeature"] = transformedSuggestionFeature
		}

		transformedEnableEventBasedSuggestion, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsEnableEventBasedSuggestion(original["enable_event_based_suggestion"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedEnableEventBasedSuggestion); val.IsValid() && !isEmptyValue(val) {
			transformed["enableEventBasedSuggestion"] = transformedEnableEventBasedSuggestion
		}

		transformedSuggestionTriggerSettings, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettings(original["suggestion_trigger_settings"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedSuggestionTriggerSettings); val.IsValid() && !isEmptyValue(val) {
			transformed["suggestionTriggerSettings"] = transformedSuggestionTriggerSettings
		}

		transformedQueryConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfig(original["query_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedQueryConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["queryConfig"] = transformedQueryConfig
		}

		transformedConversationModelConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationModelConfig(original["conversation_model_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedConversationModelConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["conversationModelConfig"] = transformedConversationModelConfig
		}

		transformedConversationProcessConfig, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationProcessConfig(original["conversation_process_config"], d, config)
		if err != nil {
			return nil, err
		} else if val := reflect.ValueOf(transformedConversationProcessConfig); val.IsValid() && !isEmptyValue(val) {
			transformed["conversationProcessConfig"] = transformedConversationProcessConfig
		}

		req = append(req, transformed)
	}
	return req, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionFeature(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedType, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionFeatureType(original["type"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedType); val.IsValid() && !isEmptyValue(val) {
		transformed["type"] = transformedType
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionFeatureType(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsEnableEventBasedSuggestion(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettings(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedNoSmalltalk, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettingsNoSmalltalk(original["no_smalltalk"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedNoSmalltalk); val.IsValid() && !isEmptyValue(val) {
		transformed["noSmalltalk"] = transformedNoSmalltalk
	}

	transformedOnlyEndUser, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettingsOnlyEndUser(original["only_end_user"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedOnlyEndUser); val.IsValid() && !isEmptyValue(val) {
		transformed["onlyEndUser"] = transformedOnlyEndUser
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettingsNoSmalltalk(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsSuggestionTriggerSettingsOnlyEndUser(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedMaxResults, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigMaxResults(original["max_results"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMaxResults); val.IsValid() && !isEmptyValue(val) {
		transformed["maxResults"] = transformedMaxResults
	}

	transformedConfidenceThreshold, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigConfidenceThreshold(original["confidence_threshold"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedConfidenceThreshold); val.IsValid() && !isEmptyValue(val) {
		transformed["confidenceThreshold"] = transformedConfidenceThreshold
	}

	transformedContextFilterSettings, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettings(original["context_filter_settings"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedContextFilterSettings); val.IsValid() && !isEmptyValue(val) {
		transformed["contextFilterSettings"] = transformedContextFilterSettings
	}

	transformedKnowledgeBaseQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySource(original["knowledge_base_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedKnowledgeBaseQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["knowledgeBaseQuerySource"] = transformedKnowledgeBaseQuerySource
	}

	transformedDocumentQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySource(original["document_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDocumentQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["documentQuerySource"] = transformedDocumentQuerySource
	}

	transformedDialogflowQuerySource, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySource(original["dialogflow_query_source"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDialogflowQuerySource); val.IsValid() && !isEmptyValue(val) {
		transformed["dialogflowQuerySource"] = transformedDialogflowQuerySource
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigMaxResults(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigConfidenceThreshold(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettings(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedDropHandoffMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropHandoffMessages(original["drop_handoff_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropHandoffMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropHandoffMessages"] = transformedDropHandoffMessages
	}

	transformedDropVirtualAgentMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropVirtualAgentMessages(original["drop_virtual_agent_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropVirtualAgentMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropVirtualAgentMessages"] = transformedDropVirtualAgentMessages
	}

	transformedDropIvrMessages, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropIvrMessages(original["drop_ivr_messages"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDropIvrMessages); val.IsValid() && !isEmptyValue(val) {
		transformed["dropIvrMessages"] = transformedDropIvrMessages
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropHandoffMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropVirtualAgentMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigContextFilterSettingsDropIvrMessages(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedKnowledgeBases, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySourceKnowledgeBases(original["knowledge_bases"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedKnowledgeBases); val.IsValid() && !isEmptyValue(val) {
		transformed["knowledgeBases"] = transformedKnowledgeBases
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigKnowledgeBaseQuerySourceKnowledgeBases(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedDocuments, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySourceDocuments(original["documents"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDocuments); val.IsValid() && !isEmptyValue(val) {
		transformed["documents"] = transformedDocuments
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDocumentQuerySourceDocuments(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySource(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedAgent, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySourceAgent(original["agent"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedAgent); val.IsValid() && !isEmptyValue(val) {
		transformed["agent"] = transformedAgent
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsQueryConfigDialogflowQuerySourceAgent(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationModelConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedModel, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationModelConfigModel(original["model"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedModel); val.IsValid() && !isEmptyValue(val) {
		transformed["model"] = transformedModel
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationModelConfigModel(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationProcessConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedRecentSentencesCount, err := expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationProcessConfigRecentSentencesCount(original["recent_sentences_count"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedRecentSentencesCount); val.IsValid() && !isEmptyValue(val) {
		transformed["recentSentencesCount"] = transformedRecentSentencesCount
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigsConversationProcessConfigRecentSentencesCount(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigGroupSuggestionResponses(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedEnableEntityExtraction, err := expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigEnableEntityExtraction(original["enable_entity_extraction"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedEnableEntityExtraction); val.IsValid() && !isEmptyValue(val) {
		transformed["enableEntityExtraction"] = transformedEnableEntityExtraction
	}

	transformedEnableSentimentAnalysis, err := expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigEnableSentimentAnalysis(original["enable_sentiment_analysis"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedEnableSentimentAnalysis); val.IsValid() && !isEmptyValue(val) {
		transformed["enableSentimentAnalysis"] = transformedEnableSentimentAnalysis
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigEnableEntityExtraction(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigEnableSentimentAnalysis(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedLivePersonConfig, err := expandDialogflowConversationProfileHumanAgentHandoffConfigLivePersonConfig(original["live_person_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedLivePersonConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["livePersonConfig"] = transformedLivePersonConfig
	}

	transformedSalesforceLiveAgentConfig, err := expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfig(original["salesforce_live_agent_config"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedSalesforceLiveAgentConfig); val.IsValid() && !isEmptyValue(val) {
		transformed["salesforceLiveAgentConfig"] = transformedSalesforceLiveAgentConfig
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigLivePersonConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedAccountNumber, err := expandDialogflowConversationProfileHumanAgentHandoffConfigLivePersonConfigAccountNumber(original["account_number"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedAccountNumber); val.IsValid() && !isEmptyValue(val) {
		transformed["accountNumber"] = transformedAccountNumber
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigLivePersonConfigAccountNumber(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedOrganizationId, err := expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigOrganizationId(original["organization_id"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedOrganizationId); val.IsValid() && !isEmptyValue(val) {
		transformed["organizationId"] = transformedOrganizationId
	}

	transformedDeploymentId, err := expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigDeploymentId(original["deployment_id"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedDeploymentId); val.IsValid() && !isEmptyValue(val) {
		transformed["deploymentId"] = transformedDeploymentId
	}

	transformedButtonId, err := expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigButtonId(original["button_id"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedButtonId); val.IsValid() && !isEmptyValue(val) {
		transformed["buttonId"] = transformedButtonId
	}

	transformedEndpointDomain, err := expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigEndpointDomain(original["endpoint_domain"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedEndpointDomain); val.IsValid() && !isEmptyValue(val) {
		transformed["endpointDomain"] = transformedEndpointDomain
	}

	return transformed, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigOrganizationId(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigDeploymentId(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigButtonId(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileHumanAgentHandoffConfigSalesforceLiveAgentConfigEndpointDomain(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileNotificationConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedTopic, err := expandDialogflowConversationProfileNotificationConfigTopic(original["topic"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedTopic); val.IsValid() && !isEmptyValue(val) {
		transformed["topic"] = transformedTopic
	}

	transformedMessageFormat, err := expandDialogflowConversationProfileNotificationConfigMessageFormat(original["message_format"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMessageFormat); val.IsValid() && !isEmptyValue(val) {
		transformed["messageFormat"] = transformedMessageFormat
	}

	return transformed, nil
}

func expandDialogflowConversationProfileNotificationConfigTopic(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileNotificationConfigMessageFormat(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileLoggingConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedEnableStackdriverLogging, err := expandDialogflowConversationProfileLoggingConfigEnableStackdriverLogging(original["enable_stackdriver_logging"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedEnableStackdriverLogging); val.IsValid() && !isEmptyValue(val) {
		transformed["enableStackdriverLogging"] = transformedEnableStackdriverLogging
	}

	return transformed, nil
}

func expandDialogflowConversationProfileLoggingConfigEnableStackdriverLogging(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileNewMessageEventNotificationConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedTopic, err := expandDialogflowConversationProfileNewMessageEventNotificationConfigTopic(original["topic"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedTopic); val.IsValid() && !isEmptyValue(val) {
		transformed["topic"] = transformedTopic
	}

	transformedMessageFormat, err := expandDialogflowConversationProfileNewMessageEventNotificationConfigMessageFormat(original["message_format"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedMessageFormat); val.IsValid() && !isEmptyValue(val) {
		transformed["messageFormat"] = transformedMessageFormat
	}

	return transformed, nil
}

func expandDialogflowConversationProfileNewMessageEventNotificationConfigTopic(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileNewMessageEventNotificationConfigMessageFormat(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileSttConfig(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	l := v.([]interface{})
	if len(l) == 0 || l[0] == nil {
		return nil, nil
	}
	raw := l[0]
	original := raw.(map[string]interface{})
	transformed := make(map[string]interface{})

	transformedSpeechModelVariant, err := expandDialogflowConversationProfileSttConfigSpeechModelVariant(original["speech_model_variant"], d, config)
	if err != nil {
		return nil, err
	} else if val := reflect.ValueOf(transformedSpeechModelVariant); val.IsValid() && !isEmptyValue(val) {
		transformed["speechModelVariant"] = transformedSpeechModelVariant
	}

	return transformed, nil
}

func expandDialogflowConversationProfileSttConfigSpeechModelVariant(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileLanguageCode(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileTimeZone(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}

func expandDialogflowConversationProfileSecuritySettings(v interface{}, d TerraformResourceData, config *Config) (interface{}, error) {
	return v, nil
}
